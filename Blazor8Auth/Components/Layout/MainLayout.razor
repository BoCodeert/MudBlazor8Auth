@using Blazor8Auth.Services
@using Blazor8Auth.Services.Authorization
@inherits LayoutComponentBase

<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())"/>
    </MudAppBar>
    
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu/>
    </MudDrawer>
    
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {
    [Inject] private IAuthService AuthService { get; set; }
    [Inject] private NavigationManager NavigationManager { get; set; }
    private bool _drawerOpen = true;

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // A hard refresh or the user just navigated to the application for the first time
        if (firstRender && !AuthService.IsLoggedIn)
        {
            var url = NavigationManager.ToAbsoluteUri(NavigationManager.Uri).ToString();
            if (url.Contains("/login"))
            {
                return;
            }

            var restoredFromState = await AuthService.GetStateFromTokenAsync();
            //The user lost their server side session, but still has a valid JWT
            if (restoredFromState)
            {
                NavigationManager.Refresh();
            }
        }
    }
}